@inherits UmbracoTemplatePage
@{
    //var items = ((IPublishedContent)ViewData["menuItem"])
    //    .Children<INavigationComponent>()
    //    .Where(i => !i.UmbracoNaviHide);

    var homePage = Model.Content.AncestorOrSelf(1);

    var items = homePage.FirstChild<MenuContainer>()
        .Children<MenuItem>()
        .Where(i => !i.UmbracoNaviHide && i.LinkUrl != null)
        .ToList();
}

@foreach (var item in items)
{
    var page = Umbraco.TypedContent(item.LinkUrl);
    <li class="@item.CssClass @(CurrentPage.Id == page.Id ? "active" : null)">
        <a href="@page.Url">@item.Name</a>
    </li>

    @*var title = item.GetTitle();

        var children = item.Children<INavigationComponent>()
            .Where(i => !i.UmbracoNaviHide);
        if (children.Any())
        {
            <li class="dropdown @(CurrentPage.Id == item.Id ? "active" : null)">
                <a href="@item.Url">
                    <!--class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"-->
                    @title
                </a>
                <!--Show second level-->
                <ul class="dropdown-menu" role="menu">
                    @{
                        var dict = new ViewDataDictionary(ViewData);
                        dict["menuItem"] = item;
                        Html.RenderPartial("~/Views/Partials/Navigation/NavigationList.cshtml", dict);
                    }
                </ul>
            </li>
        }
        else
        {
            <li class="@(CurrentPage.Id == item.Id ? "active" : null)">
                <a href="@item.Url">@title</a>
            </li>
        }*@
}