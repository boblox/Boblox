@inherits UmbracoViewPage<NewsResult>
@{
    var items = Model.Items;
}

@foreach (var item in items)
{
    var title = item.GetTitle();
    var image = item.Image;
    var imageUrl = image != null ? image.Src + image.GetCropUrl(image.Crops.First().Alias) :
        Utils.GetImageNotFoundUrl(Consts.NewsConfig.ThumbImgWidth, Consts.NewsConfig.ThumbImgHeight);
    var subHeader = item.Subtitle;
    var content = new HtmlString(string.Empty); // can't parse content as we are now using Grid Layout
    var url = !string.IsNullOrEmpty(item.Password) ?
        string.Format("{0}?{1}={2}", item.Url, Consts.NewsConfig.PasswordQueryString, item.Password) :
        item.Url;

    <article class="news-item">
        <div class="row">
            <div class="col-md-24 col-lg-20">
                <div class="row">
                    <div class="col-sm-8">
                        <a href="@url" class="image">
                            <img class="img-responsive" src="@imageUrl" alt="" />
                        </a>
                    </div>
                    <div class="col-sm-16">
                        <header class="title">
                            <h4>
                                <a href="@url">@title</a>
                            </h4>
                        </header>

                        @{ Html.RenderPartial("/Views/Partials/News/NewsItemInfo.cshtml", item);}
                        @if (!string.IsNullOrEmpty(subHeader))
                        {
                            <div class="byline">
                                @Html.GetInnerText(string.IsNullOrWhiteSpace(subHeader) ?
                                    content : new HtmlString(subHeader), 200)
                                <a href="@url">@Localization.ItemReadMore</a>
                            </div>
                        }
                        @{ Html.RenderPartial("/Views/Partials/News/NewsItemTags.cshtml", item);}
                        <hr class="break-line visible-xs" />
                    </div>
                </div>
            </div>
        </div>
    </article>
                            }

@{
    var dict = new ViewDataDictionary
    {
        { "DataAttr", "data-news-link" },
        { "RoutingObj", "newsRouting" }
    };
    Html.RenderPartial("~/Views/Partials/Common/ArticlesPager.cshtml", Model, dict);
}